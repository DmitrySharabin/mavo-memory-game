/* Basic Styling */
html {
	--max-inline-size: 500px;

	--delay: .4s;
	--duration: .7s;

	box-sizing: border-box;
	font-family: system-ui, Helvetica, Arial, sans-serif;
	color: hsl(0 0% 20%);
}

*,
*::before,
*::after {
	box-sizing: inherit;
}

html,
body {
	inline-size: 100vw;
	block-size: 100vh;
	margin: 0;
	padding: 0;
}

header {
	padding: 2em;
	text-align: center;
}

	header h1 {
		margin: 0;
		font-weight: 400;
		font-variant: small-caps;
	}

	header h2 {
		margin: 0;
		font-size: 1em;
		font-weight: 300;
	}

/* Reset Game and Clear Results buttons */
:where([mv-app="gameState"], [mv-app="stats"]) svg {
	inline-size: 1.7em;
	block-size: 1.7em;
	padding: 0.35em;
	border-radius: 0.35em;
	cursor: pointer;
}

[mv-app="gameState"] svg:hover {
	background-color: hsl(0 0% 90%);
}

[mv-app="gameState"] svg:active {
	background-color: hsl(0 0% 80%);
}

[mv-app="gameState"] {
	--icon-faded: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100" fill="white" opacity=".3"><text style="font-size:80px" y=".9em">⭐️</text></svg>');
	--icon: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100" fill="white"><text style="font-size:80px" y=".9em">⭐️</text></svg>');

	display: grid;
	grid-template-columns: repeat(4, 1fr);
	grid-gap: max(8px, 0.7em);
	place-items: center;
	min-block-size: 2em;
	max-inline-size: var(--max-inline-size, 500px);
	margin: 0 auto 0.8em;
	padding: 0 1.3em;
}

	/* Credit to Lea Verou: https://twitter.com/LeaVerou/status/1449514764221272064 and https://codepen.io/leaverou/pen/abydReB */
	[mv-app="gameState"] meter {
		display: inline-block;
		inline-size: 3em;
		font-size: 130%;
		background: var(--icon-faded) 0 / auto 100%;
	}

	[mv-app="gameState"] meter::-webkit-meter-inner-element {
		display: block;
	}

	[mv-app="gameState"] meter::-webkit-meter-bar {
		border: none;
		background: transparent;
	}

	[mv-app="gameState"] meter::-webkit-meter-optimum-value {
		background: var(--icon) 0 / auto 100%;
	}

	[mv-app="gameState"] meter::-moz-meter-bar {
		background: var(--icon) 0 / auto 100%;
	}

#game-board {
	--theme-color: #ee7622;
	--matched-card: #eee;
	--incorrect-card: hsl(0 100% 65%);

	display: grid;
	grid-template-columns: repeat(4, 1fr);
	grid-gap: max(8px, 0.7em);
	justify-content: center;

	margin: 0 auto;
	padding: 1.3em;

	border-radius: 0.5em;
	box-shadow: 0px 0px 15px 0px hsl(0 0% 20% / 0.75);
	list-style-type: none;

	/* Credit: https://bennettfeely.com/gradients/ */
	background:
		linear-gradient(limegreen, transparent),
		linear-gradient(90deg, skyblue, transparent),
		linear-gradient(-90deg, coral, transparent);
	background-blend-mode: screen;
}

	#game-board [property="symbol"] {
		-webkit-user-select: none;
		user-select: none;
	}

.card {
	display: grid;
	place-items: center;

	aspect-ratio: 3 / 4;

	/* Source of the image: https://www.flaticon.com/free-icon/chip_897219 */
	background: url(../img/chip.svg) center center no-repeat content-box;
	background-blend-mode: overlay;
	background-color: var(--theme-color);

	border-radius: 0.2em;

	font-size: 48px;
	/* Hide card's symbol by default */
	color: transparent;
	cursor: pointer;

	animation: flipOut 1s;
}

.flipped {
	color: initial;
	background: var(--matched-card);
	animation: flipIn 1s;
	cursor: default;
}

:is(.matched-first, .matched-second) {
	color: initial;
	background: var(--matched-card);
	cursor: default;
}

.matched-first {
	animation: correct var(--duration) var(--delay, 0);
}

.matched-second {
	animation:
		flipIn .8s,
		correct var(--duration) var(--delay, 0);
}

.incorrect-first {
	animation:
		changeCardColor var(--duration) var(--delay, 0) steps(1, end),
		shake var(--duration) var(--delay, 0);
}

.incorrect-second {
	animation:
		flipIn .8s,
		changeCardColor var(--duration) var(--delay, 0) steps(1, end),
		shake var(--duration) var(--delay, 0);
}

[mv-app="themes"] {
	--matched-card: #eee;

	max-inline-size: calc(min(100%, var(--max-inline-size, 500px)) - 2em);
	margin: 1.5em auto 0;
}

	[mv-app="themes"] summary {
		text-transform: uppercase;
		font-size: smaller;
		font-weight: bold;
		color: rgb(0 0 0 / .5);
		cursor: default;
	}

	[mv-app="themes"] .inputs {
		display: flex;
		gap: .3em;
		justify-content: space-between;
		align-items: center;
	}

	[mv-app="themes"] :where(.mv-bar, [mv-list][property="theme"], [mv-list-item="theme"]) :is(button, .mv-button) {
		padding: .4em .6em;
		border: 0;
		margin: 0 .5em;
		background: rgb(0 0 0 / .15);
		font-size: smaller;
		border-radius: .3em;
		font-weight: bold;
		text-transform: uppercase;
		text-decoration: none;
		color: inherit;
		cursor: pointer;
	}

	[mv-app="themes"] button.mv-add-theme {
		margin: 0;
		margin-block-start: 1.8em;
	}

	[mv-app="themes"] button.mv-add-theme::before {
		content: "+ ";
	}

	[mv-app="themes"] input[property] {
		border: 1px solid rgb(0 0 0 / .2);
		border-radius: .3em;
		box-shadow: 0 .05em .2em rgb(0 0 0 / .2) inset;
		background: rgba(26 26 26 / .05);
	}

	[mv-app="themes"] input[property="name"] {
		padding: .3em .5em .2em;
		font-size: 105%;
	}

	[mv-app="themes"] [mv-list]:where([property="theme"], [property="symbols"]) {
		padding: 0;
		margin-inline: 1em;
		list-style-type: none;
	}

	[mv-app="themes"] [mv-list-item][property="theme"]+[mv-list-item][property="theme"] {
		margin-block-start: 1.5em;
	}

	[mv-app="themes"] .symbols summary {
		margin: .5em 0;
	}

	[mv-app="themes"] [mv-list][property="symbols"] {
		margin: .5em auto;
		display: grid;
		grid-template-columns: repeat(8, 1fr);
		gap: .5em;
		text-align: center;
	}

	[mv-app="themes"] [mv-list-item][property="symbols"] input.mv-editor {
		width: 100% !important;
		aspect-ratio: 3 / 4;
		border-radius: .2em;
		background: var(--matched-card);
		border: 1px solid var(--theme-color, hsl(0 0% 65%));
		box-shadow: 0 1px 2px rgb(0 0 0 / 0.1), 0 1px 1px rgb(0 0 0 / 0.06);
		font-size: 2.3em;
	}

	[mv-app="themes"] button.mv-add-symbols {
		display: none;
	}

#game-over {
	display: flex;
	flex-flow: column;
	align-items: center;
	position: fixed;
	inset: 0;
	background: hsl(0 0% 97%);
	text-align: center;
	line-height: 1.2;
	transition: .3s opacity calc(var(--duration, 0) + var(--delay, 0));
}

#game-over:not(.game-over) {
	visibility: hidden;
	opacity: 0;
}

	#game-over>svg {
		fill: var(--theme-color);
		inline-size: 5em;
		block-size: 5em;
		margin-top: 20vh;
	}

	#game-over>h2 {
		font-size: 2em;
		padding: 1em 1em 0;
		margin: 0 auto;
		white-space: pre-line;
	}

	#game-over>h2.boom {
		animation: boom .3s calc(var(--duration, 0) + var(--delay, 0) + .1s);
	}

	#game-over>p {
		padding: 0 1.2em;
	}

	#game-over>button {
		padding: 1em 2em;
		margin: 1em 0 0;
		font-size: 1em;
		color: hsl(0 0% 100%);
		background: var(--theme-color);
		border: none;
		border-radius: 0.55em;
		box-shadow: inset 0 -.3em 0 0 hsl(0 0% 0% / 0.2);
		cursor: pointer;
	}

		#game-over>button:hover {
			box-shadow: inset 0 -.3em 0 0 hsl(0 0% 0% /0.6),
			0 0 .6em 0 hsl(0 0% 0% / 0.5);
		}

		#game-over>button:focus {
			box-shadow: inset 0 .25em .35em 0 hsl(0 0% 0% / 0.2);
		}

[mv-app="stats"] {
	margin: 3em auto 1em;
	border-collapse: collapse;
}

	[mv-app="stats"] caption {
		margin: 0 0 0.3em;
		font-style: italic;
		text-align: left;
		line-height: 1.85;
		font-size: 0.82em;
	}

	[mv-app="stats"] caption::before {
		content: "Table. ";
		font-style: normal;
	}

	[mv-app="stats"] th {
		padding: 0 1.5em 0 0;
		border-bottom: 1px solid currentColor;
	}

	[mv-app="stats"] tr {
		block-size: 2em;
	}

	[mv-app="stats"] tbody tr[mv-list-item] td:first-child::before {
		content: "#"
	}

	[mv-app="stats"] tbody tr:nth-child(even) {
		background: hsl(0 0% 93%);
	}

	/* Clear Results button */
	[mv-app="stats"] svg {
		fill: hsl(0 0% 30%);
		margin-inline-end: -0.35em;
		float: right;
	}

	[mv-app="stats"] svg:hover {
		fill: hsl(0 0% 100%);
		background-color: crimson;
	}

	[mv-app="stats"] svg:active {
		background-color: hsl(348 83% 35%);
	}

footer {
	position: absolute;
	inset: 0;
	inset-inline-end: initial;
	inset-block-end: initial;
	z-index: 1;
	display: flex;
	flex-direction: column;
	gap: 0.1em;
	align-items: center;
	justify-content: center;
	padding: .4em 4.8em;
	font-size: 85%;
	background: hsl(350 80% 55%);
	color: hsl(41 61% 90%);
	transform: rotate(90deg) translateX(70%) rotate(-90deg) rotate(-45deg) translateY(-100%);
	transform-origin: 0 0;
	box-shadow: 0 0.1em 0 0.1em hsl(0 0% 0% / 0.15);
}

	footer img {
		inline-size: 3.5em;
	}

	footer img:not(:hover) {
		filter: grayscale(100%) brightness(400%);
	}

/* Animations */
/*
	Correct guess
	Source: http://www.theappguruz.com/tag-tools/web/CSSAnimations/
*/
@keyframes correct {
	0% {
		transform: scale3d(1, 1, 1);
	}
	10%,
	20% {
		transform: scale3d(.9, .9, .9) rotate3d(0, 0, 1, -3deg);
	}
	30%,
	50%,
	70%,
	90% {
		transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, 3deg);
	}
	40%,
	60%,
	80% {
		transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, -3deg);
	}
	100% {
		transform: scale3d(1, 1, 1);
	}
}
/*
	Incorrect guess
	Inspired by: http://www.theappguruz.com/tag-tools/web/CSSAnimations/
*/
@keyframes shake {
	0%,
	100% {
		transform: translate3d(0, 0, 0);
	}
	10%,
	30%,
	50%,
	70%,
	90% {
	transform: translate3d(-10px, 0, 0);
	}
	20%,
	40%,
	60%,
	80% {
	transform: translate3d(10px, 0, 0);
	}
}

/* Make not matched cards red and show their symbols */
@keyframes changeCardColor {
	from {
		color: initial;
		background: var(--incorrect-card);
	}
}

/*
	Card's flip
	Source: http://www.theappguruz.com/tag-tools/web/CSSAnimations/
*/
@keyframes flipIn {
	0% {
		transform: perspective(400px) rotate3d(0, 1, 0, 90deg);
		transition-timing-function: ease-in;
	}
	40% {
		transform: perspective(400px) rotate3d(0, 1, 0, -20deg);
		transition-timing-function: ease-in;
	}
	60% {
		transform: perspective(400px) rotate3d(0, 1, 0, 10deg);
	}
	80% {
		transform: perspective(400px) rotate3d(0, 1, 0, -5deg);
	}
	100% {
		transform: perspective(400px);
	}
}

@keyframes flipOut {
	0% {
		transform: perspective(400px) rotate3d(0, 1, 0, -90deg);
		transition-timing-function: ease-in;
	}
	40% {
		transform: perspective(400px) rotate3d(0, 1, 0, 20deg);
		transition-timing-function: ease-in;
	}
	60% {
		transform: perspective(400px) rotate3d(0, 1, 0, -10deg);
	}
	80% {
		transform: perspective(400px) rotate3d(0, 1, 0, 5deg);
	}
	100% {
		transform: perspective(400px);
	}
}
@keyframes boom {
	50% {
		transform: scale(1.2);
	}
}

/* Make game layout responsive */
@media (max-width: 375px) {
	[mv-app="themes"] [mv-list-item][property="symbols"] input.mv-editor {
		font-size: 2em;
	}

	[mv-app="stats"] {
		font-size: 80%;
	}
}

@media (max-width: 415px) {
	header {
		margin-block-start: 1.5em;
	}

	[mv-app="gameState"] {
		font-size: 85%;
	}

	[mv-app="themes"] [mv-list][property="symbols"] {
		grid-template-columns: repeat(4, 1fr);
	}

	[mv-app="themes"] [mv-list-item][property="symbols"] input.mv-editor {
		font-size: 3em;
	}

	footer {
		gap: 0.3em;
		inset-inline-end: 0;
		padding: 0.7em 3em;
		flex-direction: revert;
		transform: revert;
	}

	footer a {
		display: flex;
		align-self: stretch;
	}
}

@media (min-width: 500px) {
	[mv-app="gameState"],
	#game-board {
		max-inline-size: var(--max-inline-size, 500px);
	}

	.card {
		font-size: 70px;
	}

	#game-over>svg {
		margin-top: 30vh;
	}
}
